Bootstrap: docker
From: ubuntu:20.04

%setup
    # touch /file1
    # touch ${SINGULARITY_ROOTFS}/file2

%files
    # /file1
    # /file1 /opt

%environment
    # export LISTEN_PORT=12345
    # export LC_ALL=C
    # ENV TZ=Europe/Berline
    # export DEBIAN_FRONTEND=noninteractive 
    # export TZ=TZ=Europe/Minsk
    


%post
    export DEBIAN_FRONTEND=noninteractive 
    export TZ=TZ=Europe/Berlin
    # export TZ=TZ=Europe/Minsk

    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime
    echo $TZ > /etc/timezone
    apt-get update 

    apt-get install -y build-essential \
    wget \
    git \
    unzip \
    python3-setuptools \
    curl 

    ##########################
    # pip
    ##########################
    curl "https://bootstrap.pypa.io/get-pip.py" -o "install-pip3-ubuntu.py"
    python3 install-pip3-ubuntu.py




    # ##########################
    # # CUDA
    # ##########################
    # apt-get install dialog

    # wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin
    # mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600
    # wget https://developer.download.nvidia.com/compute/cuda/11.3.0/local_installers/cuda-repo-ubuntu2004-11-3-local_11.3.0-465.19.01-1_amd64.deb
    # DEBIAN_FRONTEND=noninteractive dpkg -i cuda-repo-ubuntu2004-11-3-local_11.3.0-465.19.01-1_amd64.deb
    # apt-key add /var/cuda-repo-ubuntu2004-11-3-local/7fa2af80.pub
    # DEBIAN_FRONTEND=noninteractive apt-get -y update 
    # apt-get -y -q install cuda


    # ##########################
    # # Cmake
    # ##########################
    # apt-get install -y build-essential libssl-dev
    # wget https://github.com/Kitware/CMake/releases/download/v3.23.2/cmake-3.23.2.tar.gz
    # tar -zxvf cmake-3.23.2.tar.gz
    # cd cmake-3.23.2
    # ./bootstrap
    # make
    # make install
    # cd ..

    git clone https://github.com/gintautas12358/FullySpikingVAE.git

    apt-get update -y
    apt-get install -y python3-pycuda

    pip install torch==1.8.1
    pip install torchvision==0.9.1
    pip install tensorboard pyyaml tqdm matplotlib scipy clean-fid pandas
    pip install scikit-image


    # pip install -r FullySpikingVAE/requirements.txt
    python3 FullySpikingVAE/init_fid_stats.py
    echo "Finished"

%runscript
    echo "Container was created $NOW"
    echo "Arguments received: $*"
    exec echo "$@"
    # python main_fsvae exp_name -config NetworkConfigs/usb_events.yaml

%startscript
    # nc -lp $LISTEN_PORT

%test
    # grep -q NAME=\"Ubuntu\" /etc/os-release
    # if [ $? -eq 0 ]; then
    #     echo "Container base is Ubuntu as expected."
    # else
    #     echo "Container base is not Ubuntu."
    # fi

%labels
    Author d@sylabs.io
    Version v0.0.1

%help
    This is a demo container used to illustrate a def file that uses all
    supported sections.